<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="FuelTracker.Views.SettingsPage"
             xmlns:fontAwesome="clr-namespace:FontAwesome"
             xmlns:viewmodels="clr-namespace:FuelTracker.ViewModels" 
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             xmlns:model="clr-namespace:FuelTracker.Models"
             BackgroundColor="{AppThemeBinding Light={StaticResource SystemGray2}, Dark={StaticResource SystemGray2Dark}}"
             x:DataType="viewmodels:SettingsViewModel">
    <ContentPage.BindingContext>
        <viewmodels:SettingsViewModel/>
    </ContentPage.BindingContext>

    <ContentPage.Content>
        <StackLayout>
            <StackLayout Style="{StaticResource HeaderBar}">
                <Button Style="{StaticResource BackButton}" 
                        Command="{Binding GoBackCommand}"/>
                <Label Style="{StaticResource Header}" Text="{Binding Title}"
                       HorizontalTextAlignment="Center"
                       VerticalTextAlignment="Center"
                       Padding="10"/>
                <Button Style="{StaticResource BackButton}" Text=""/>
            </StackLayout>
            <StackLayout Margin="10">
                <Frame BackgroundColor="{AppThemeBinding Light={StaticResource SystemGray4}, Dark={StaticResource SystemGray4Dark}}" 
                       CornerRadius="20" HasShadow="True">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Text="Theme" FontSize="30" Margin="0,-15"/>
                        <Button Grid.Row="1" Grid.Column="0" 
                                Style="{StaticResource IconButton}"
                                Command="{Binding ThemeCommand}"
                                CommandParameter="0"
                                Text="System">
                            <Button.ImageSource>
                                <FontImageSource FontFamily="FAS" Glyph="{x:Static fontAwesome:FontAwesomeIcons.UserCog}" 
                                                 Size="30" Color="{AppThemeBinding Light={StaticResource TextColor}, Dark={StaticResource TextColorDark}}"/>
                            </Button.ImageSource>
                        </Button>
                        <Button Grid.Row="1" Grid.Column="1" 
                                Style="{StaticResource IconButton}"
                                Command="{Binding ThemeCommand}"
                                CommandParameter="1"
                                Text="Light">
                            <Button.ImageSource>
                                <FontImageSource FontFamily="FAS" Glyph="{x:Static fontAwesome:FontAwesomeIcons.Sun}" 
                                                 Size="30" Color="{AppThemeBinding Light={StaticResource TextColor}, Dark={StaticResource TextColorDark}}"/>
                            </Button.ImageSource>
                        </Button>
                        <Button Grid.Row="1" Grid.Column="2" 
                                Style="{StaticResource IconButton}"
                                Command="{Binding ThemeCommand}"
                                CommandParameter="2"
                                Text="Dark">
                            <Button.ImageSource>
                                <FontImageSource FontFamily="FAS" Glyph="{x:Static fontAwesome:FontAwesomeIcons.Moon}" 
                                                 Size="30" Color="{AppThemeBinding Light={StaticResource TextColor}, Dark={StaticResource TextColorDark}}"/>
                            </Button.ImageSource>
                        </Button>
                    </Grid>
                </Frame>
                <Frame BackgroundColor="{AppThemeBinding Light={StaticResource SystemGray4}, Dark={StaticResource SystemGray4Dark}}" 
                       CornerRadius="20" HasShadow="True" Margin="0,10,0,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="65"/>
                            <RowDefinition Height="20"/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Grid.ColumnSpan="15" Text="Calibration" FontSize="30" Margin="0,-15"/>
                        <Label Text="Enter the width, so that the bar is exactly filled" FontSize="20" 
                               Grid.Row="1" Grid.ColumnSpan="10"/>
                        <Entry Text="{Binding Width}" 
                               Grid.Row="1" Grid.ColumnSpan="5" Grid.Column="10"
                               Keyboard="Numeric" MaxLength="3" HorizontalTextAlignment="End"/>
                        <Frame Grid.Row="2" Grid.ColumnSpan="15" IsClippedToBounds="True" 
                                           BackgroundColor="{AppThemeBinding Light={StaticResource SystemGray5}, Dark={StaticResource SystemGrayDark}}" 
                                           HorizontalOptions="Fill" CornerRadius="5">
                            <Frame BackgroundColor="{AppThemeBinding Light={StaticResource Primary}, Dark={StaticResource PrimaryDark}}" Margin="-20" Padding="0"
                                                   HorizontalOptions="Start" VerticalOptions="Fill" 
                                                   WidthRequest="{Binding Width}"/>
                        </Frame>
                        <Rectangle Grid.Row="2" Grid.Column="3" Style="{StaticResource Subdivider}"
                                           HorizontalOptions="End"/>
                        <Rectangle Grid.Row="2" Grid.Column="7" Style="{StaticResource Subdivider}"
                                           HorizontalOptions="Center"/>
                        <Rectangle Grid.Row="2" Grid.Column="11" Style="{StaticResource Subdivider}"
                                           HorizontalOptions="Start"/>
                    </Grid>
                </Frame>
                <Frame BackgroundColor="{AppThemeBinding Light={StaticResource SystemGray4}, Dark={StaticResource SystemGray4Dark}}" 
                       CornerRadius="20" HasShadow="True" Margin="0,10,0,0">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Text="Units" FontSize="30" Margin="0,-15"/>
                        <Label Grid.Row="1" Text="Distance" FontSize="25"/>
                        <Picker Grid.Row="1" Grid.Column="1" 
                                FontSize="20" HorizontalTextAlignment="End"
                                ItemsSource="{Binding UnitsDistance}"
                                SelectedIndex="{Binding SelectedDistance}">
                            <Picker.Behaviors>
                                <xct:EventToCommandBehavior EventName="SelectedIndexChanged"
                                                            Command="{Binding DistanceCommand}"
                                                            CommandParameter="{Binding SelectedDistance}"/>
                            </Picker.Behaviors>
                        </Picker>
                        <Label Grid.Row="2" Text="Currency" FontSize="25"/>
                        <Picker Grid.Row="2" Grid.Column="1" 
                                FontSize="20" HorizontalTextAlignment="End"
                                ItemsSource="{Binding UnitsCurrency}"
                                SelectedIndex="{Binding SelectedCurrency}">
                            <Picker.Behaviors>
                                <xct:EventToCommandBehavior EventName="SelectedIndexChanged"
                                                            Command="{Binding CurrencyCommand}"
                                                            CommandParameter="{Binding SelectedCurrency}"/>
                            </Picker.Behaviors>
                        </Picker>
                        <Label Grid.Row="3" Text="Volume" FontSize="25"/>
                        <Picker Grid.Row="3" Grid.Column="1" 
                                FontSize="20" HorizontalTextAlignment="End"
                                ItemsSource="{Binding UnitsVolume}"
                                SelectedIndex="{Binding SelectedVolume}">
                            <Picker.Behaviors>
                                <xct:EventToCommandBehavior EventName="SelectedIndexChanged"
                                                            Command="{Binding VolumeCommand}"
                                                            CommandParameter="{Binding SelectedVolume}"/>
                            </Picker.Behaviors>
                        </Picker>
                    </Grid>
                </Frame>
            </StackLayout>
        </StackLayout>
    </ContentPage.Content>
</ContentPage>